["^ ","~:output",["^ ","~:js","goog.provide('com.fulcrologic.fulcro.rendering.ident_optimized_render');\n/**\n * Checks the given `idents` and returns a subset of them where the data they refer to has changed\n * between `old-state` and `new-state`.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.dirty_table_entries = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$dirty_table_entries(old_state,new_state,idents){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (result,ident){\nif((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(old_state,ident) === cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(new_state,ident))){\nreturn result;\n} else {\nreturn cljs.core.cons(ident,result);\n}\n}),cljs.core.List.EMPTY,idents);\n});\n/**\n * Uses the component's query and the current application state to query for the current value of that component's\n *   props (subtree). It then sends those props to the component via \"props tunnelling\" (setting them on a well-known key in\n *   component-local state).\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_component_BANG_(app__$1,ident,c){\nif(cljs.core.truth_((function (){var and__4251__auto__ = c;\nif(cljs.core.truth_(and__4251__auto__)){\nreturn ident;\n} else {\nreturn and__4251__auto__;\n}\n})())){\nvar map__57977 = app__$1;\nvar map__57977__$1 = cljs.core.__destructure_map(map__57977);\nvar state_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57977__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366));\nvar state_map = cljs.core.deref(state_atom);\nvar query = com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$2(c,state_map);\nvar q = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.createAsIfByAssoc([ident,query])], null);\nvar prior_computed = (function (){var or__4253__auto__ = (com.fulcrologic.fulcro.components.get_computed.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_computed.cljs$core$IFn$_invoke$arity$1(c) : com.fulcrologic.fulcro.components.get_computed.call(null,c));\nif(cljs.core.truth_(or__4253__auto__)){\nreturn or__4253__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})();\nvar data_tree = (cljs.core.truth_(query)?com.fulcrologic.fulcro.algorithms.denormalize.db__GT_tree(q,state_map,state_map):null);\nvar new_props = (function (){var G__57978 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(data_tree,ident);\nvar G__57979 = prior_computed;\nreturn (com.fulcrologic.fulcro.components.computed.cljs$core$IFn$_invoke$arity$2 ? com.fulcrologic.fulcro.components.computed.cljs$core$IFn$_invoke$arity$2(G__57978,G__57979) : com.fulcrologic.fulcro.components.computed.call(null,G__57978,G__57979));\n})();\nif(cljs.core.truth_(query)){\n} else {\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.rendering.ident-optimized-render\",null,42,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Query was empty. Refresh failed for \",cljs.core.type(c),\"See https://book.fulcrologic.com/#err-id-opt-render-empty-query\"], null);\n}),null)),null,1623036506,null);\n}\n\nreturn com.fulcrologic.fulcro.components.tunnel_props_BANG_(c,new_props);\n} else {\nvar root = new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"app-root\",\"com.fulcrologic.fulcro.application/app-root\",835379005).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772).cljs$core$IFn$_invoke$arity$1(app__$1)));\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(c,root)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"com.fulcrologic.fulcro.rendering.ident-optimized-render\",null,46,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Failed to do optimized update. Component\",(function (){var G__57980 = com.fulcrologic.fulcro.components.react_type(c);\nreturn (com.fulcrologic.fulcro.components.class__GT_registry_key.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.class__GT_registry_key.cljs$core$IFn$_invoke$arity$1(G__57980) : com.fulcrologic.fulcro.components.class__GT_registry_key.call(null,G__57980));\n})(),\"queries for data that changed, but does not have an ident.\"], null);\n}),null)),null,-1657642414,null);\n} else {\n}\n\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Targeted update failed\",cljs.core.PersistentArrayMap.EMPTY);\n}\n});\n/**\n * Renders *only* components that *have* the given ident.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_components_with_ident_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_components_with_ident_BANG_(app__$1,ident){\nvar seq__57981 = cljs.core.seq(com.fulcrologic.fulcro.components.ident__GT_components(app__$1,ident));\nvar chunk__57982 = null;\nvar count__57983 = (0);\nvar i__57984 = (0);\nwhile(true){\nif((i__57984 < count__57983)){\nvar c = chunk__57982.cljs$core$IIndexed$_nth$arity$2(null,i__57984);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident,c);\n\n\nvar G__58086 = seq__57981;\nvar G__58087 = chunk__57982;\nvar G__58088 = count__57983;\nvar G__58089 = (i__57984 + (1));\nseq__57981 = G__58086;\nchunk__57982 = G__58087;\ncount__57983 = G__58088;\ni__57984 = G__58089;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__57981);\nif(temp__5753__auto__){\nvar seq__57981__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__57981__$1)){\nvar c__4679__auto__ = cljs.core.chunk_first(seq__57981__$1);\nvar G__58090 = cljs.core.chunk_rest(seq__57981__$1);\nvar G__58091 = c__4679__auto__;\nvar G__58092 = cljs.core.count(c__4679__auto__);\nvar G__58093 = (0);\nseq__57981 = G__58090;\nchunk__57982 = G__58091;\ncount__57983 = G__58092;\ni__57984 = G__58093;\ncontinue;\n} else {\nvar c = cljs.core.first(seq__57981__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident,c);\n\n\nvar G__58094 = cljs.core.next(seq__57981__$1);\nvar G__58095 = null;\nvar G__58096 = (0);\nvar G__58097 = (0);\nseq__57981 = G__58094;\nchunk__57982 = G__58095;\ncount__57983 = G__58096;\ni__57984 = G__58097;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * Renders components that have, or query for, the given ident.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_dependents_of_ident_BANG_(app__$1,ident){\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_components_with_ident_BANG_(app__$1,ident);\n\nvar map__57992 = app__$1;\nvar map__57992__$1 = cljs.core.__destructure_map(map__57992);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57992__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar map__57993 = cljs.core.deref(runtime_atom);\nvar map__57993__$1 = cljs.core.__destructure_map(map__57993);\nvar indexes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57993__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938));\nvar map__57994 = indexes;\nvar map__57994__$1 = cljs.core.__destructure_map(map__57994);\nvar prop__GT_classes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57994__$1,new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717));\nvar idents_in_joins = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57994__$1,new cljs.core.Keyword(null,\"idents-in-joins\",\"idents-in-joins\",-1556962035));\nvar class__GT_components = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57994__$1,new cljs.core.Keyword(null,\"class->components\",\"class->components\",436435919));\nvar idents_in_joins__$1 = (function (){var or__4253__auto__ = idents_in_joins;\nif(cljs.core.truth_(or__4253__auto__)){\nreturn or__4253__auto__;\n} else {\nreturn cljs.core.PersistentHashSet.EMPTY;\n}\n})();\nif(cljs.core.contains_QMARK_(idents_in_joins__$1,ident)){\nvar classes = (prop__GT_classes.cljs$core$IFn$_invoke$arity$1 ? prop__GT_classes.cljs$core$IFn$_invoke$arity$1(ident) : prop__GT_classes.call(null,ident));\nif(cljs.core.seq(classes)){\nvar seq__57995 = cljs.core.seq(classes);\nvar chunk__57996 = null;\nvar count__57997 = (0);\nvar i__57998 = (0);\nwhile(true){\nif((i__57998 < count__57997)){\nvar class$ = chunk__57996.cljs$core$IIndexed$_nth$arity$2(null,i__57998);\nvar seq__58015_58100 = cljs.core.seq((class__GT_components.cljs$core$IFn$_invoke$arity$1 ? class__GT_components.cljs$core$IFn$_invoke$arity$1(class$) : class__GT_components.call(null,class$)));\nvar chunk__58017_58101 = null;\nvar count__58018_58102 = (0);\nvar i__58019_58103 = (0);\nwhile(true){\nif((i__58019_58103 < count__58018_58102)){\nvar component_58104 = chunk__58017_58101.cljs$core$IIndexed$_nth$arity$2(null,i__58019_58103);\nvar component_ident_58105 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_58104) : com.fulcrologic.fulcro.components.get_ident.call(null,component_58104));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_58105,component_58104);\n\n\nvar G__58106 = seq__58015_58100;\nvar G__58107 = chunk__58017_58101;\nvar G__58108 = count__58018_58102;\nvar G__58109 = (i__58019_58103 + (1));\nseq__58015_58100 = G__58106;\nchunk__58017_58101 = G__58107;\ncount__58018_58102 = G__58108;\ni__58019_58103 = G__58109;\ncontinue;\n} else {\nvar temp__5753__auto___58110 = cljs.core.seq(seq__58015_58100);\nif(temp__5753__auto___58110){\nvar seq__58015_58111__$1 = temp__5753__auto___58110;\nif(cljs.core.chunked_seq_QMARK_(seq__58015_58111__$1)){\nvar c__4679__auto___58112 = cljs.core.chunk_first(seq__58015_58111__$1);\nvar G__58113 = cljs.core.chunk_rest(seq__58015_58111__$1);\nvar G__58114 = c__4679__auto___58112;\nvar G__58115 = cljs.core.count(c__4679__auto___58112);\nvar G__58116 = (0);\nseq__58015_58100 = G__58113;\nchunk__58017_58101 = G__58114;\ncount__58018_58102 = G__58115;\ni__58019_58103 = G__58116;\ncontinue;\n} else {\nvar component_58117 = cljs.core.first(seq__58015_58111__$1);\nvar component_ident_58118 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_58117) : com.fulcrologic.fulcro.components.get_ident.call(null,component_58117));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_58118,component_58117);\n\n\nvar G__58119 = cljs.core.next(seq__58015_58111__$1);\nvar G__58120 = null;\nvar G__58121 = (0);\nvar G__58122 = (0);\nseq__58015_58100 = G__58119;\nchunk__58017_58101 = G__58120;\ncount__58018_58102 = G__58121;\ni__58019_58103 = G__58122;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\n\nvar G__58123 = seq__57995;\nvar G__58124 = chunk__57996;\nvar G__58125 = count__57997;\nvar G__58126 = (i__57998 + (1));\nseq__57995 = G__58123;\nchunk__57996 = G__58124;\ncount__57997 = G__58125;\ni__57998 = G__58126;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__57995);\nif(temp__5753__auto__){\nvar seq__57995__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__57995__$1)){\nvar c__4679__auto__ = cljs.core.chunk_first(seq__57995__$1);\nvar G__58127 = cljs.core.chunk_rest(seq__57995__$1);\nvar G__58128 = c__4679__auto__;\nvar G__58129 = cljs.core.count(c__4679__auto__);\nvar G__58130 = (0);\nseq__57995 = G__58127;\nchunk__57996 = G__58128;\ncount__57997 = G__58129;\ni__57998 = G__58130;\ncontinue;\n} else {\nvar class$ = cljs.core.first(seq__57995__$1);\nvar seq__58021_58134 = cljs.core.seq((class__GT_components.cljs$core$IFn$_invoke$arity$1 ? class__GT_components.cljs$core$IFn$_invoke$arity$1(class$) : class__GT_components.call(null,class$)));\nvar chunk__58023_58135 = null;\nvar count__58024_58136 = (0);\nvar i__58025_58137 = (0);\nwhile(true){\nif((i__58025_58137 < count__58024_58136)){\nvar component_58138 = chunk__58023_58135.cljs$core$IIndexed$_nth$arity$2(null,i__58025_58137);\nvar component_ident_58139 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_58138) : com.fulcrologic.fulcro.components.get_ident.call(null,component_58138));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_58139,component_58138);\n\n\nvar G__58140 = seq__58021_58134;\nvar G__58141 = chunk__58023_58135;\nvar G__58142 = count__58024_58136;\nvar G__58143 = (i__58025_58137 + (1));\nseq__58021_58134 = G__58140;\nchunk__58023_58135 = G__58141;\ncount__58024_58136 = G__58142;\ni__58025_58137 = G__58143;\ncontinue;\n} else {\nvar temp__5753__auto___58144__$1 = cljs.core.seq(seq__58021_58134);\nif(temp__5753__auto___58144__$1){\nvar seq__58021_58145__$1 = temp__5753__auto___58144__$1;\nif(cljs.core.chunked_seq_QMARK_(seq__58021_58145__$1)){\nvar c__4679__auto___58146 = cljs.core.chunk_first(seq__58021_58145__$1);\nvar G__58147 = cljs.core.chunk_rest(seq__58021_58145__$1);\nvar G__58148 = c__4679__auto___58146;\nvar G__58149 = cljs.core.count(c__4679__auto___58146);\nvar G__58150 = (0);\nseq__58021_58134 = G__58147;\nchunk__58023_58135 = G__58148;\ncount__58024_58136 = G__58149;\ni__58025_58137 = G__58150;\ncontinue;\n} else {\nvar component_58151 = cljs.core.first(seq__58021_58145__$1);\nvar component_ident_58152 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_58151) : com.fulcrologic.fulcro.components.get_ident.call(null,component_58151));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_58152,component_58151);\n\n\nvar G__58153 = cljs.core.next(seq__58021_58145__$1);\nvar G__58154 = null;\nvar G__58155 = (0);\nvar G__58156 = (0);\nseq__58021_58134 = G__58153;\nchunk__58023_58135 = G__58154;\ncount__58024_58136 = G__58155;\ni__58025_58137 = G__58156;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\n\nvar G__58157 = cljs.core.next(seq__57995__$1);\nvar G__58158 = null;\nvar G__58159 = (0);\nvar G__58160 = (0);\nseq__57995 = G__58157;\nchunk__57996 = G__58158;\ncount__57997 = G__58159;\ni__57998 = G__58160;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Given an app and a `property-set`: returns the components that query for the items in property-set.\n * \n *   The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n *   in a component query as a property or join key.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.props__GT_components = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$props__GT_components(app__$1,property_set){\nif(cljs.core.seq(property_set)){\nvar map__58030 = app__$1;\nvar map__58030__$1 = cljs.core.__destructure_map(map__58030);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58030__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar map__58031 = cljs.core.deref(runtime_atom);\nvar map__58031__$1 = cljs.core.__destructure_map(map__58031);\nvar indexes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58031__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938));\nvar map__58032 = indexes;\nvar map__58032__$1 = cljs.core.__destructure_map(map__58032);\nvar prop__GT_classes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58032__$1,new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717));\nvar class__GT_components = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58032__$1,new cljs.core.Keyword(null,\"class->components\",\"class->components\",436435919));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (result,prop){\nvar classes = (prop__GT_classes.cljs$core$IFn$_invoke$arity$1 ? prop__GT_classes.cljs$core$IFn$_invoke$arity$1(prop) : prop__GT_classes.call(null,prop));\nvar components = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__58028_SHARP_,p2__58029_SHARP_){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(p1__58028_SHARP_,(class__GT_components.cljs$core$IFn$_invoke$arity$1 ? class__GT_components.cljs$core$IFn$_invoke$arity$1(p2__58029_SHARP_) : class__GT_components.call(null,p2__58029_SHARP_)));\n}),cljs.core.PersistentHashSet.EMPTY,classes);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(result,components);\n}),cljs.core.PersistentHashSet.EMPTY,property_set);\n} else {\nreturn null;\n}\n});\n/**\n * This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n * uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n * When it finds data that has changed it renders all of the components that depend on that data.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_stale_components_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_stale_components_BANG_(app__$1){\nvar map__58035 = app__$1;\nvar map__58035__$1 = cljs.core.__destructure_map(map__58035);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58035__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar state_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58035__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366));\nvar map__58036 = cljs.core.deref(runtime_atom);\nvar map__58036__$1 = cljs.core.__destructure_map(map__58036);\nvar indexes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58036__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938));\nvar last_rendered_state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58036__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"last-rendered-state\",\"com.fulcrologic.fulcro.application/last-rendered-state\",1438978441));\nvar to_refresh = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58036__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"to-refresh\",\"com.fulcrologic.fulcro.application/to-refresh\",-967758829));\nvar only_refresh = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58036__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"only-refresh\",\"com.fulcrologic.fulcro.application/only-refresh\",1300408206));\nvar map__58037 = indexes;\nvar map__58037__$1 = cljs.core.__destructure_map(map__58037);\nvar linked_props = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58037__$1,new cljs.core.Keyword(null,\"linked-props\",\"linked-props\",1547374714));\nvar ident__GT_components = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58037__$1,new cljs.core.Keyword(null,\"ident->components\",\"ident->components\",-1952169224));\nvar prop__GT_classes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58037__$1,new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717));\nvar idents_in_joins = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58037__$1,new cljs.core.Keyword(null,\"idents-in-joins\",\"idents-in-joins\",-1556962035));\nvar limited_refresh_QMARK_ = cljs.core.seq(only_refresh);\nif(limited_refresh_QMARK_){\nvar map__58038 = cljs.core.group_by(edn_query_language.core.ident_QMARK_,only_refresh);\nvar map__58038__$1 = cljs.core.__destructure_map(map__58038);\nvar limited_idents = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58038__$1,true);\nvar limited_props = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58038__$1,false);\nvar limited_to_render = com.fulcrologic.fulcro.rendering.ident_optimized_render.props__GT_components(app__$1,limited_props);\nvar seq__58039_58163 = cljs.core.seq(limited_to_render);\nvar chunk__58041_58164 = null;\nvar count__58042_58165 = (0);\nvar i__58043_58166 = (0);\nwhile(true){\nif((i__58043_58166 < count__58042_58165)){\nvar c_58167 = chunk__58041_58164.cljs$core$IIndexed$_nth$arity$2(null,i__58043_58166);\nvar ident_58168 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c_58167) : com.fulcrologic.fulcro.components.get_ident.call(null,c_58167));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident_58168,c_58167);\n\n\nvar G__58169 = seq__58039_58163;\nvar G__58170 = chunk__58041_58164;\nvar G__58171 = count__58042_58165;\nvar G__58172 = (i__58043_58166 + (1));\nseq__58039_58163 = G__58169;\nchunk__58041_58164 = G__58170;\ncount__58042_58165 = G__58171;\ni__58043_58166 = G__58172;\ncontinue;\n} else {\nvar temp__5753__auto___58173 = cljs.core.seq(seq__58039_58163);\nif(temp__5753__auto___58173){\nvar seq__58039_58174__$1 = temp__5753__auto___58173;\nif(cljs.core.chunked_seq_QMARK_(seq__58039_58174__$1)){\nvar c__4679__auto___58175 = cljs.core.chunk_first(seq__58039_58174__$1);\nvar G__58177 = cljs.core.chunk_rest(seq__58039_58174__$1);\nvar G__58178 = c__4679__auto___58175;\nvar G__58179 = cljs.core.count(c__4679__auto___58175);\nvar G__58180 = (0);\nseq__58039_58163 = G__58177;\nchunk__58041_58164 = G__58178;\ncount__58042_58165 = G__58179;\ni__58043_58166 = G__58180;\ncontinue;\n} else {\nvar c_58181 = cljs.core.first(seq__58039_58174__$1);\nvar ident_58183 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c_58181) : com.fulcrologic.fulcro.components.get_ident.call(null,c_58181));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident_58183,c_58181);\n\n\nvar G__58185 = cljs.core.next(seq__58039_58174__$1);\nvar G__58186 = null;\nvar G__58187 = (0);\nvar G__58188 = (0);\nseq__58039_58163 = G__58185;\nchunk__58041_58164 = G__58186;\ncount__58042_58165 = G__58187;\ni__58043_58166 = G__58188;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__58048 = cljs.core.seq(limited_idents);\nvar chunk__58049 = null;\nvar count__58050 = (0);\nvar i__58051 = (0);\nwhile(true){\nif((i__58051 < count__58050)){\nvar i = chunk__58049.cljs$core$IIndexed$_nth$arity$2(null,i__58051);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i);\n\n\nvar G__58189 = seq__58048;\nvar G__58190 = chunk__58049;\nvar G__58191 = count__58050;\nvar G__58192 = (i__58051 + (1));\nseq__58048 = G__58189;\nchunk__58049 = G__58190;\ncount__58050 = G__58191;\ni__58051 = G__58192;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__58048);\nif(temp__5753__auto__){\nvar seq__58048__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__58048__$1)){\nvar c__4679__auto__ = cljs.core.chunk_first(seq__58048__$1);\nvar G__58194 = cljs.core.chunk_rest(seq__58048__$1);\nvar G__58195 = c__4679__auto__;\nvar G__58196 = cljs.core.count(c__4679__auto__);\nvar G__58197 = (0);\nseq__58048 = G__58194;\nchunk__58049 = G__58195;\ncount__58050 = G__58196;\ni__58051 = G__58197;\ncontinue;\n} else {\nvar i = cljs.core.first(seq__58048__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i);\n\n\nvar G__58199 = cljs.core.next(seq__58048__$1);\nvar G__58200 = null;\nvar G__58201 = (0);\nvar G__58202 = (0);\nseq__58048 = G__58199;\nchunk__58049 = G__58200;\ncount__58050 = G__58201;\ni__58051 = G__58202;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nvar state_map = cljs.core.deref(state_atom);\nvar idents_in_joins__$1 = (function (){var or__4253__auto__ = idents_in_joins;\nif(cljs.core.truth_(or__4253__auto__)){\nreturn or__4253__auto__;\n} else {\nreturn cljs.core.PersistentHashSet.EMPTY;\n}\n})();\nvar dirty_linked_props = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc,p){\nif((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(state_map,p) === cljs.core.get.cljs$core$IFn$_invoke$arity$2(last_rendered_state,p))))){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,p);\n} else {\nreturn acc;\n}\n}),cljs.core.PersistentHashSet.EMPTY,linked_props);\nvar map__58054 = cljs.core.group_by(edn_query_language.core.ident_QMARK_,to_refresh);\nvar map__58054__$1 = cljs.core.__destructure_map(map__58054);\nvar idents_to_force = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58054__$1,true);\nvar props_to_force = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58054__$1,false);\nvar props_to_force__$1 = clojure.set.union.cljs$core$IFn$_invoke$arity$2(props_to_force,dirty_linked_props);\nvar mounted_idents = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.keys(ident__GT_components),idents_in_joins__$1);\nvar stale_idents = com.fulcrologic.fulcro.rendering.ident_optimized_render.dirty_table_entries(last_rendered_state,state_map,mounted_idents);\nvar extra_to_force = com.fulcrologic.fulcro.rendering.ident_optimized_render.props__GT_components(app__$1,props_to_force__$1);\nvar all_idents = clojure.set.union.cljs$core$IFn$_invoke$arity$2(cljs.core.set(idents_to_force),cljs.core.set(stale_idents));\nvar seq__58055_58205 = cljs.core.seq(all_idents);\nvar chunk__58056_58206 = null;\nvar count__58057_58207 = (0);\nvar i__58058_58208 = (0);\nwhile(true){\nif((i__58058_58208 < count__58057_58207)){\nvar i_58210 = chunk__58056_58206.cljs$core$IIndexed$_nth$arity$2(null,i__58058_58208);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i_58210);\n\n\nvar G__58212 = seq__58055_58205;\nvar G__58213 = chunk__58056_58206;\nvar G__58214 = count__58057_58207;\nvar G__58215 = (i__58058_58208 + (1));\nseq__58055_58205 = G__58212;\nchunk__58056_58206 = G__58213;\ncount__58057_58207 = G__58214;\ni__58058_58208 = G__58215;\ncontinue;\n} else {\nvar temp__5753__auto___58216 = cljs.core.seq(seq__58055_58205);\nif(temp__5753__auto___58216){\nvar seq__58055_58217__$1 = temp__5753__auto___58216;\nif(cljs.core.chunked_seq_QMARK_(seq__58055_58217__$1)){\nvar c__4679__auto___58218 = cljs.core.chunk_first(seq__58055_58217__$1);\nvar G__58219 = cljs.core.chunk_rest(seq__58055_58217__$1);\nvar G__58220 = c__4679__auto___58218;\nvar G__58221 = cljs.core.count(c__4679__auto___58218);\nvar G__58222 = (0);\nseq__58055_58205 = G__58219;\nchunk__58056_58206 = G__58220;\ncount__58057_58207 = G__58221;\ni__58058_58208 = G__58222;\ncontinue;\n} else {\nvar i_58223 = cljs.core.first(seq__58055_58217__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i_58223);\n\n\nvar G__58224 = cljs.core.next(seq__58055_58217__$1);\nvar G__58225 = null;\nvar G__58226 = (0);\nvar G__58227 = (0);\nseq__58055_58205 = G__58224;\nchunk__58056_58206 = G__58225;\ncount__58057_58207 = G__58226;\ni__58058_58208 = G__58227;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__58062 = cljs.core.seq(extra_to_force);\nvar chunk__58063 = null;\nvar count__58064 = (0);\nvar i__58065 = (0);\nwhile(true){\nif((i__58065 < count__58064)){\nvar c = chunk__58063.cljs$core$IIndexed$_nth$arity$2(null,i__58065);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,(com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c) : com.fulcrologic.fulcro.components.get_ident.call(null,c)),c);\n\n\nvar G__58231 = seq__58062;\nvar G__58232 = chunk__58063;\nvar G__58233 = count__58064;\nvar G__58234 = (i__58065 + (1));\nseq__58062 = G__58231;\nchunk__58063 = G__58232;\ncount__58064 = G__58233;\ni__58065 = G__58234;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__58062);\nif(temp__5753__auto__){\nvar seq__58062__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__58062__$1)){\nvar c__4679__auto__ = cljs.core.chunk_first(seq__58062__$1);\nvar G__58236 = cljs.core.chunk_rest(seq__58062__$1);\nvar G__58237 = c__4679__auto__;\nvar G__58238 = cljs.core.count(c__4679__auto__);\nvar G__58239 = (0);\nseq__58062 = G__58236;\nchunk__58063 = G__58237;\ncount__58064 = G__58238;\ni__58065 = G__58239;\ncontinue;\n} else {\nvar c = cljs.core.first(seq__58062__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,(com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c) : com.fulcrologic.fulcro.components.get_ident.call(null,c)),c);\n\n\nvar G__58240 = cljs.core.next(seq__58062__$1);\nvar G__58241 = null;\nvar G__58242 = (0);\nvar G__58243 = (0);\nseq__58062 = G__58240;\nchunk__58063 = G__58241;\ncount__58064 = G__58242;\ni__58065 = G__58243;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n});\n/**\n * The top-level call for using this optimized render in your application.\n * \n *   If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n *   it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n *   data that has changed.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_BANG_(var_args){\nvar G__58069 = arguments.length;\nswitch (G__58069) {\ncase 1:\nreturn com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (app__$1){\nreturn com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$2(app__$1,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (app__$1,p__58073){\nvar map__58074 = p__58073;\nvar map__58074__$1 = cljs.core.__destructure_map(map__58074);\nvar options = map__58074__$1;\nvar force_root_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58074__$1,new cljs.core.Keyword(null,\"force-root?\",\"force-root?\",-1598741683));\nvar root_props_changed_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58074__$1,new cljs.core.Keyword(null,\"root-props-changed?\",\"root-props-changed?\",1999614835));\nif(cljs.core.truth_((function (){var or__4253__auto__ = force_root_QMARK_;\nif(cljs.core.truth_(or__4253__auto__)){\nreturn or__4253__auto__;\n} else {\nreturn root_props_changed_QMARK_;\n}\n})())){\nreturn com.fulcrologic.fulcro.rendering.keyframe_render.render_BANG_(app__$1,options);\n} else {\ntry{return com.fulcrologic.fulcro.rendering.ident_optimized_render.render_stale_components_BANG_(app__$1);\n}catch (e58077){var e = e58077;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"com.fulcrologic.fulcro.rendering.ident-optimized-render\",null,146,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Optimized render failed. Falling back to root render.\"], null);\n}),null)),null,-21162312,null);\n\nreturn com.fulcrologic.fulcro.rendering.keyframe_render.render_BANG_(app__$1,options);\n}}\n}));\n\n(com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$lang$maxFixedArity = 2);\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).","~:file","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",60],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core.async","~$cljs.core.async","~$clojure.pprint","~$cljs.pprint"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$com.fulcrologic.fulcro.rendering.ident-optimized-render","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","~$edn-query-language.core","^Q","~$log","~$taoensso.timbre","~$kr","~$com.fulcrologic.fulcro.rendering.keyframe-render","~$comp","~$com.fulcrologic.fulcro.components","~$eql","^Q","~$com.fulcrologic.fulcro.algorithms.denormalize","^Y","~$cljs.core","^Z","~$goog","^[","^P","^P","^U","^U","^W","^W","^S","^S","~$fdn","^Y"],"~:seen",["^G",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^Z","^Z","^R","^S","^V","^W","^W","^W","^S","^S"],"~:form",["~#list",["~$ns","^I","A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).",["^16",["^12",["^U","~:as","^T"],["^Y","^18","^10"],["^W","^18","^V"],["^P","^18","^O"],["^Q","^18","^X"],["^S","^18","^R"]]]]],"~:flags",["^ ","^12",["^G",[]]],"~:js-deps",["^ "],"~:deps",["^[","^Z","^U","^Y","^W","^P","^Q","^S"]],"^L","^I","~:resource-id",["~:shadow.build.classpath/resource","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc"],"~:compiled-at",1642814551146,"^J",["^ ","^O","^P","^Q","^Q","^R","^S","^T","^U","^V","^W","^X","^Q","^Y","^Y","^Z","^Z","^[","^[","^P","^P","^U","^U","^W","^W","^S","^S","^10","^Y"],"~:resource-name","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","~:warnings",[],"~:source","(ns com.fulcrologic.fulcro.rendering.ident-optimized-render\n  \"A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).\"\n  (:require\n    [com.fulcrologic.fulcro.rendering.keyframe-render :as kr]\n    [com.fulcrologic.fulcro.algorithms.denormalize :as fdn]\n    [com.fulcrologic.fulcro.components :as comp]\n    [clojure.set :as set]\n    [edn-query-language.core :as eql]\n    [taoensso.timbre :as log]))\n\n(defn dirty-table-entries\n  \"Checks the given `idents` and returns a subset of them where the data they refer to has changed\n   between `old-state` and `new-state`.\"\n  [old-state new-state idents]\n  (reduce\n    (fn [result ident]\n      (if (identical? (get-in old-state ident) (get-in new-state ident))\n        result\n        (cons ident result)))\n    (list)\n    idents))\n\n(defn render-component!\n  \"Uses the component's query and the current application state to query for the current value of that component's\n  props (subtree). It then sends those props to the component via \\\"props tunnelling\\\" (setting them on a well-known key in\n  component-local state).\"\n  [app ident c]\n  #?(:cljs\n     (if (and c ident)\n       (let [{:com.fulcrologic.fulcro.application/keys [state-atom]} app\n             state-map      @state-atom\n             query          (comp/get-query c state-map)\n             q              [{ident query}]\n             prior-computed (or (comp/get-computed c) {})\n             data-tree      (when query (fdn/db->tree q state-map state-map)) ; denormalize time is set by app render\n             new-props      (comp/computed (get data-tree ident) prior-computed)]\n         (when-not query (log/error \"Query was empty. Refresh failed for \" (type c) \"See https://book.fulcrologic.com/#err-id-opt-render-empty-query\"))\n         (comp/tunnel-props! c new-props))\n       (let [root (-> app :com.fulcrologic.fulcro.application/runtime-atom deref :com.fulcrologic.fulcro.application/app-root)]\n         (when (not= c root)\n           (log/info \"Failed to do optimized update. Component\" (-> c comp/react-type (comp/class->registry-key))\n             \"queries for data that changed, but does not have an ident.\"))\n         (throw (ex-info \"Targeted update failed\" {}))))))\n\n(defn render-components-with-ident!\n  \"Renders *only* components that *have* the given ident.\"\n  [app ident]\n  (doseq [c (comp/ident->components app ident)]\n    (render-component! app ident c)))\n\n(defn render-dependents-of-ident!\n  \"Renders components that have, or query for, the given ident.\"\n  [app ident]\n  (render-components-with-ident! app ident)\n  (let [{:com.fulcrologic.fulcro.application/keys [runtime-atom]} app\n        {:com.fulcrologic.fulcro.application/keys [indexes]} @runtime-atom\n        {:keys [prop->classes idents-in-joins class->components]} indexes\n        idents-in-joins (or idents-in-joins #{})]\n    (when (contains? idents-in-joins ident)\n      (let [classes (prop->classes ident)]\n        (when (seq classes)\n          (doseq [class classes]\n            (doseq [component (class->components class)\n                    :let [component-ident (comp/get-ident component)]]\n              (render-component! app component-ident component))))))))\n\n(defn props->components\n  \"Given an app and a `property-set`: returns the components that query for the items in property-set.\n\n  The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n  in a component query as a property or join key.\"\n  [app property-set]\n  (when (seq property-set)\n    (let [{:com.fulcrologic.fulcro.application/keys [runtime-atom]} app\n          {:com.fulcrologic.fulcro.application/keys [indexes]} @runtime-atom\n          {:keys [prop->classes class->components]} indexes]\n      (reduce\n        (fn [result prop]\n          (let [classes    (prop->classes prop)\n                components (reduce #(into %1 (class->components %2)) #{} classes)]\n            (into result components)))\n        #{}\n        property-set))))\n\n(defn render-stale-components!\n  \"This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n   uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n   When it finds data that has changed it renders all of the components that depend on that data.\"\n  [app]\n  (let [{:com.fulcrologic.fulcro.application/keys [runtime-atom state-atom]} app\n        {:com.fulcrologic.fulcro.application/keys [indexes last-rendered-state\n                                                   to-refresh only-refresh]} @runtime-atom\n        {:keys [linked-props ident->components prop->classes idents-in-joins]} indexes\n        limited-refresh? (seq only-refresh)]\n    (if limited-refresh?\n      (let [{limited-idents true\n             limited-props  false} (group-by eql/ident? only-refresh)\n            limited-to-render (props->components app limited-props)]\n        (doseq [c limited-to-render\n                :let [ident (comp/get-ident c)]]\n          (render-component! app ident c))\n        (doseq [i limited-idents]\n          (render-dependents-of-ident! app i)))\n      (let [state-map          @state-atom\n            idents-in-joins    (or idents-in-joins #{})\n            dirty-linked-props (reduce\n                                 (fn [acc p]\n                                   (if (not (identical?\n                                              (get state-map p)\n                                              (get last-rendered-state p)))\n                                     (conj acc p)\n                                     acc))\n                                 #{}\n                                 linked-props)\n            {idents-to-force true\n             props-to-force  false} (group-by eql/ident? to-refresh)\n            props-to-force     (set/union props-to-force dirty-linked-props)\n            mounted-idents     (concat (keys ident->components) idents-in-joins)\n            stale-idents       (dirty-table-entries last-rendered-state state-map mounted-idents)\n            extra-to-force     (props->components app props-to-force)\n            all-idents         (set/union (set idents-to-force) (set stale-idents))]\n        (doseq [i all-idents]\n          (render-dependents-of-ident! app i))\n        (doseq [c extra-to-force]\n          (render-component! app (comp/get-ident c) c))))))\n\n(defn render!\n  \"The top-level call for using this optimized render in your application.\n\n  If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n  it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n  data that has changed.\"\n  ([app]\n   (render! app {}))\n  ([app {:keys [force-root? root-props-changed?] :as options}]\n   (if (or force-root? root-props-changed?)\n     (kr/render! app options)\n     (try\n       (render-stale-components! app)\n       (catch #?(:clj Exception :cljs :default) e\n         (log/info \"Optimized render failed. Falling back to root render.\")\n         (kr/render! app options))))))\n\n","~:reader-features",["^G",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["com.fulcrologic.fulcro.rendering.ident-optimized-render/dirty-table-entries","old-state","new-state","idents","cljs.core.reduce","result","ident","cljs.core.get_in","cljs.core/cons","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-component!","app","c","and__4251__auto__","map__57977","cljs.core/--destructure-map","cljs.core.get","cljs.core/deref","state-atom","state-map","query","com.fulcrologic.fulcro.components.get_query","q","prior-computed","or__4253__auto__","com.fulcrologic.fulcro.components/get-computed","data-tree","com.fulcrologic.fulcro.algorithms.denormalize/db->tree","new-props","G__57978","G__57979","com.fulcrologic.fulcro.components/computed","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","cljs.core/type","com.fulcrologic.fulcro.components/tunnel-props!","root","cljs.core.not_EQ_","com.fulcrologic.fulcro.components/react-type","G__57980","com.fulcrologic.fulcro.components/class->registry-key","cljs.core.ex_info","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-components-with-ident!","seq__57981","cljs.core/seq","chunk__57982","count__57983","i__57984","temp__5753__auto__","cljs.core/chunked-seq?","c__4679__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","com.fulcrologic.fulcro.components/ident->components","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-dependents-of-ident!","map__57992","map__57993","map__57994","runtime-atom","indexes","prop->classes","idents-in-joins","class->components","cljs.core/contains?","classes","seq__57995","chunk__57996","count__57997","i__57998","class","seq__58015","chunk__58017","count__58018","i__58019","seq__58021","chunk__58023","count__58024","i__58025","component","component-ident","com.fulcrologic.fulcro.components/get-ident","com.fulcrologic.fulcro.rendering.ident-optimized-render/props->components","property-set","map__58030","map__58031","map__58032","prop","components","p1__58028#","p2__58029#","cljs.core.into","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-stale-components!","map__58035","map__58036","map__58037","last-rendered-state","to-refresh","only-refresh","linked-props","ident->components","limited-refresh?","map__58038","limited-idents","limited-props","cljs.core/group-by","edn-query-language.core/ident?","limited-to-render","seq__58039","chunk__58041","count__58042","i__58043","seq__58048","chunk__58049","count__58050","i__58051","i","map__58054","dirty-linked-props","acc","p","cljs.core.conj","idents-to-force","props-to-force","clojure.set.union","mounted-idents","cljs.core.concat","cljs.core/keys","stale-idents","extra-to-force","all-idents","cljs.core/set","seq__58055","chunk__58056","count__58057","i__58058","seq__58062","chunk__58063","count__58064","i__58065","var_args","G__58069","com.fulcrologic.fulcro.rendering.ident-optimized-render/render!","js/Error","p__58073","map__58074","com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_","force-root?","root-props-changed?","options","com.fulcrologic.fulcro.rendering.keyframe-render/render!","e58077","e","cljs.core/List"]],"~:used-vars",["^G",["~$cljs.core/--destructure-map","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-component!","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/props->components","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-components-with-ident!","~$com.fulcrologic.fulcro.components/computed","~$cljs.core/keys","~$taoensso.timbre/-log!","~$edn-query-language.core/ident?","~$com.fulcrologic.fulcro.components/react-type","~$cljs.core/count","~$cljs.core/deref","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/chunk-first","~$cljs.core/group-by","~$cljs.core/not=","~$cljs.core/Delay","~$cljs.core/chunk-rest","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/dirty-table-entries","~$cljs.core/concat","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-stale-components!","~$cljs.core/set","~$cljs.core/contains?","~$cljs.core/into","~$com.fulcrologic.fulcro.components/get-ident","~$cljs.core/conj","~$taoensso.timbre/*config*","~$com.fulcrologic.fulcro.components/ident->components","~$cljs.core/get-in","~$cljs.core/List","~$cljs.core/get","~$cljs.core/-nth","~$com.fulcrologic.fulcro.algorithms.denormalize/db->tree","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render!","~$cljs.core/ex-info","~$com.fulcrologic.fulcro.components/tunnel-props!","~$com.fulcrologic.fulcro.components/get-computed","~$cljs.core/next","~$com.fulcrologic.fulcro.rendering.keyframe-render/render!","~$com.fulcrologic.fulcro.components/get-query","~$cljs.core/not","~$cljs.core/cons","~$clojure.set/union","~$com.fulcrologic.fulcro.components/class->registry-key","~$cljs.core/first","~$js/Error","~$cljs.core/type","~$cljs.core/chunked-seq?","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-dependents-of-ident!"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","dc3011a0ee823c91a565237d17cbc3c0856de8a6","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^G",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1=","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.dom.HtmlElement"]]],["^1=","goog/async/freelist.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","cljs/core/async/impl/ioc_helpers.cljs"],["c55a0f6d67abac2efcfddf7621cac07d90298cab","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$cljs.core.async.impl.protocols"]]],["^1=","goog/i18n/datetimesymbols.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/labs/useragent/platform.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.string.internal","~$goog.labs.userAgent.util"]]],["^1=","expound/util.cljc"],["f84ecd45aeef38fd6f1c53d8323e6abc5dc5a0e4","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z"]]],["^1=","goog/crypt/crypt.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.asserts"]]],["^1=","cljs/core/async.cljs"],["c55a0f6d67abac2efcfddf7621cac07d90298cab","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^2Y","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","~$goog.array"]]],["^1=","goog/timer/timer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.Promise","~$goog.events.EventTarget","~$goog.Thenable"]]],["^1=","com/fulcrologic/fulcro/algorithms/lookup.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^S"]]],["^1=","cljs/spec/gen/alpha.cljs"],["e2ad9a4500a5ecabaf01429c4f0d6f7fac146951","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$goog.Uri"]]],["^1=","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$clojure.string","~$goog.string"]]],["^1=","goog/math/math.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30"]]],["^1=","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/string/stringformat.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3<"]]],["^1=","goog/events/eventtype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1=","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36","~$goog.object","^2[","^2Z"]]],["^1=","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2Z"]]],["^1=","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30"]]],["^1=","com/fulcrologic/fulcro/algorithms/do_not_use.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^S","^3;","^Q","^3?","~$goog.crypt","~$goog.crypt.base64","^@"]]],["^1=","expound/problems.cljc"],["f84ecd45aeef38fd6f1c53d8323e6abc5dc5a0e4","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$expound.paths","^@"]]],["^1=","goog/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2[","~$goog.reflect","^2Z"]]],["^1=","goog/structs/prioritypool.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1=","goog/events/eventlike.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.events.Event","~$goog.events.EventId"]]],["^1=","goog/async/run.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1=","com/cognitect/transit/impl/reader.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$com.cognitect.transit.impl.decoder","~$com.cognitect.transit.caching"]]],["^1=","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/async/workqueue.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.async.FreeList","^30"]]],["^1=","goog/events/events.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^3=","~$goog.events.Listenable","~$goog.events.ListenerMap","~$goog.debug.ErrorHandler","^3P","~$goog.events.EventLike","~$goog.events.EventWrapper","~$goog.events.ListenableKey","~$goog.events.Listener"]]],["^1=","goog/promise/resolver.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^37"]]],["^1=","goog/events/browserfeature.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^3<","~$goog.string.StringBuffer"]]],["^1=","goog/structs/priorityqueue.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.structs.Heap"]]],["^1=","goog/net/xhrio.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.Timer","^36","^30","~$goog.collections.maps","^3W","^38","~$goog.json.hybrid","~$goog.log","~$goog.net.ErrorCode","~$goog.net.EventType","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^3?","^3<","~$goog.uri.utils","^3>","^3:","^3[","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1=","goog/promise/thenable.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^37"]]],["^1=","goog/collections/iters.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","com/fulcrologic/fulcro/algorithms/transit.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$cognitect.transit","~$com.fulcrologic.guardrails.core","^@","~$com.fulcrologic.fulcro.algorithms.tempid"]]],["^1=","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","com/fulcrologic/guardrails/utils.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$clojure.walk"]]],["^1=","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z"]]],["^1=","com/cognitect/transit/util.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3?"]]],["^1=","cljs/pprint.cljs"],["e2ad9a4500a5ecabaf01429c4f0d6f7fac146951","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3;","^3<","^49"]]],["^1=","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^45","^46","^47","^44","^36","^3<","^49"]]],["^1=","expound/alpha.cljc"],["f84ecd45aeef38fd6f1c53d8323e6abc5dc5a0e4","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$expound.problems","^@","^3;","^P","~$expound.printer","~$expound.util","~$expound.ansi"]]],["^1=","taoensso/timbre.cljc"],["ed86c0ab3cf1c4771c5f9bf201405e20c3027ced","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3;","~$goog.i18n.DateTimeFormat","~$taoensso.encore","~$taoensso.timbre.appenders.core"]]],["^2P","node_modules/scheduler/cjs/scheduler.development.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","f683a524b03498a1510e8212cb7ad7992728f04a","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^2U"]]],["^1=","goog/net/wrapperxmlhttpfactory.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^4D","^4E"]]],["^1=","goog/date/utcdatetime.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.date","~$goog.date.Date","~$goog.date.DateTime","~$goog.date.Interval"]]],["^2P","node_modules/scheduler/cjs/scheduler.production.min.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","9472969a489f23335a05beb90573f81a73239194","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^2U"]]],["^1=","goog/i18n/nativelocaledigits.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/events/eventtarget.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.Disposable","^30","~$goog.events","^3O","^3Y","^3Z","^3?","^3P","^40","^42"]]],["^1=","com/fulcrologic/guardrails/core.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$com.fulcrologic.guardrails.impl.externs","~$com.fulcrologic.guardrails.utils","^B","^@","^3;","~$expound.alpha"]]],["^1=","goog/disposable/disposable.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.disposable.IDisposable","~$goog.dispose","~$goog.disposeAll"]]],["^1=","expound/ansi.cljc"],["f84ecd45aeef38fd6f1c53d8323e6abc5dc5a0e4","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3;"]]],["^1=","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^2P","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","d1e7bb5f7c53667de84b51d7535a959d16b917a5","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^2U"]]],["^2P","node_modules/react/index.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^2U","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1=","shadow/js.js"],["ace9930933839911cdec109414077e6c17edf429","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30"]]],["^1=","taoensso/encore.cljc"],["8ce32d99c08a853f8a56322b5aab80e59c3bd4d6","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3;","^P","~$cljs.reader","~$cljs.tools.reader.edn","^3?","^36","^3<","~$goog.string.format","^49","^4V","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","^4@","^4?","~$taoensso.truss"]]],["^2P","node_modules/react-dom/cjs/react-dom.production.min.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","94bb474c079e06a407e4fa922e58d3c69ee2b649","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^2U","~$module$node_modules$react$index","~$module$node_modules$object_assign$index","~$module$node_modules$scheduler$index"]]],["^1=","goog/structs/set.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.structs","~$goog.structs.Collection","~$goog.structs.Map","~$goog.iter.Iterator"]]],"~:SHADOW-TIMESTAMP",[1642814470000,1642814470000,1642814470000],["^2P","node_modules/react/cjs/react.development.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","754b7a48941975257c8955f6d5e511cb3a878737","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^2U","^5;"]]],["^1=","taoensso/timbre/appenders/core.cljc"],["ed86c0ab3cf1c4771c5f9bf201405e20c3027ced","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3;","^4O"]]],["^1=","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","^3L"]]],["^1=","goog/events/listener.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^42","^3Y"]]],["^1=","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","~$goog.fs.blob","^3@","~$goog.html.SafeScript","~$goog.html.trustedtypes","^3B","^3C","^3D","^3E"]]],["^1=","cljs/core/async/impl/channels.cljs"],["c55a0f6d67abac2efcfddf7621cac07d90298cab","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^2Y","^34","^32"]]],["^1=","goog/events/listenermap.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36","^43","^3?","^3P","^3Y","^42"]]],["^1=","goog/events/eventid.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","taoensso/truss.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$taoensso.truss.impl"]]],["^1=","com/fulcrologic/guardrails/registry.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z"]]],["^1=","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/events/eventwrapper.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.events.EventHandler","~$goog.events.ListenableType"]]],["^2P","node_modules/scheduler/cjs/scheduler-tracing.development.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","12fb110a42ab39177d6ab3e0a205e4a8ef350ae2","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^2U"]]],["^1=","edn_query_language/core.cljc"],["839028d06d9cc88b18b20c77c53a2bb77140d1f7","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^@"]]],["^1=","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","cljs/core/async/impl/dispatch.cljs"],["c55a0f6d67abac2efcfddf7621cac07d90298cab","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^32","^3R"]]],["^1=","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3D","~$goog.html.SafeUrl","^3E","^30","^2Z"]]],["^1=","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^5C","~$goog.html.SafeStyle","^5H","^3A","~$goog.html.uncheckedconversions","^3D","^2Z"]]],["^1=","expound/paths.cljc"],["f84ecd45aeef38fd6f1c53d8323e6abc5dc5a0e4","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^@","^4L"]]],["^1=","taoensso/truss/impl.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^P"]]],["^1=","clojure/walk.cljs"],["e2ad9a4500a5ecabaf01429c4f0d6f7fac146951","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z"]]],["^1=","goog/useragent/product.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3I","^3K","^3>"]]],["^1=","cljs/core/async/impl/protocols.cljs"],["c55a0f6d67abac2efcfddf7621cac07d90298cab","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z"]]],["^1=","goog/net/eventtype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/structs/map.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.collections.iters","^5@","~$goog.iter.StopIteration","~$goog.iter.es6"]]],["^1=","goog/net/xhriopool.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^56","~$goog.structs.PriorityPool","^5?"]]],["^1=","com/cognitect/transit/delimiters.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/date/date.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","~$goog.i18n.DateTimeSymbols","^3<"]]],["^1=","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3D","^3B","^3C","^5C","^5L","~$goog.html.SafeStyleSheet","^5H","~$goog.dom.TagName","^3A","^3E","^30","^3I","^36","^3?","^2Z","~$goog.dom.tags","^5D"]]],["^1=","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3?"]]],["^1=","goog/math/size.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","com/fulcrologic/fulcro/raw/components.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3?","^P","^3;","^4I","^Y","~$com.fulcrologic.fulcro.algorithms.do-not-use","~$com.fulcrologic.fulcro.algorithms.lookup","~$com.fulcrologic.fulcro.algorithms.transit","^Q","^4O","^S"]]],["^2P","node_modules/scheduler/index.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","408126fc2241739168bcaf5965ae56a7df143144","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^2U","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1=","goog/structs/queue.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36"]]],["^1=","goog/labs/useragent/engine.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36","^2Z","^2["]]],["^1=","com/cognitect/transit/impl/decoder.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$com.cognitect.transit.util","~$com.cognitect.transit.delimiters","^3U","~$com.cognitect.transit.types"]]],["^1=","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","cljs/reader.cljs"],["e2ad9a4500a5ecabaf01429c4f0d6f7fac146951","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3?","^48","^54","^49"]]],["^1=","goog/dom/dom.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36","^30","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^5T","~$goog.dom.safe","^5K","^5M","~$goog.math.Coordinate","~$goog.math.Size","^3?","^3<","^3D","~$goog.string.Unicode","^3>"]]],["^1=","com/fulcrologic/guardrails/impl/externs.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$com.fulcrologic.guardrails.registry","^4X"]]],["^1=","com/fulcrologic/fulcro/components.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3?","^5:","^Q","^@","^S","^4I","^3;","^5V","^Y","^5W","~$com.fulcrologic.fulcro.raw.components","^4G","^P"]]],["^1=","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.debug.Error","^63"]]],["^1=","cljs/core/async/impl/buffers.cljs"],["c55a0f6d67abac2efcfddf7621cac07d90298cab","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^2Y"]]],["^1=","goog/i18n/timezone.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36","~$goog.date.DateLike","^3?","^3<"]]],["^1=","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36","^30","^4<","^3<","^5=","^4C","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1=","goog/net/errorcode.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/iter/es6.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.iter.Iterable","^5@","^5O"]]],["^1=","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^2P","node_modules/object-assign/index.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","519ffd5a4c91b67302cc9947b794966d629860cd","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^2U"]]],["^1=","goog/debug/errorhandler.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^4U","^30","~$goog.debug.EntryPointMonitor","^6:"]]],["^1=","goog/disposable/idisposable.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/promise/promise.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^39","^30","^3V","~$goog.async.run","^3S","^6:","~$goog.promise.Resolver"]]],["^1=","cljs/core/async/impl/timers.cljs"],["c55a0f6d67abac2efcfddf7621cac07d90298cab","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^2Y","^31","^34"]]],["^1=","cljs/spec/alpha.cljs"],["e2ad9a4500a5ecabaf01429c4f0d6f7fac146951","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3?","^4I","~$cljs.spec.gen.alpha","^3;"]]],["^1=","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",[]]],["^1=","goog/json/hybrid.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","~$goog.json"]]],["^1=","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36","^3?"]]],["^1=","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^45","^3;","~$cljs.tools.reader.impl.inspect"]]],["^1=","goog/disposable/dispose.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","clojure/string.cljs"],["e2ad9a4500a5ecabaf01429c4f0d6f7fac146951","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3<","^49"]]],["^1=","com/fulcrologic/fulcro/algorithms/tempid.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^S","^4I"]]],["^1=","goog/structs/pool.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^4U","~$goog.structs.Queue","~$goog.structs.Set"]]],["^2P","node_modules/react/cjs/react.production.min.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","0a81b45abe33f0ad39b726512604018f94261db9","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^2U","^5;"]]],["^1=","goog/net/httpstatus.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/i18n/datetimeformat.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","^4Q","~$goog.date.UtcDateTime","^5R","~$goog.i18n.LocaleFeature","~$goog.i18n.NativeLocaleDigits","~$goog.i18n.TimeZone","^3<","~$goog.i18n.DateTimeSymbolsType"]]],["^1=","com/cognitect/transit/handlers.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^5[","^61","~$goog.math.Long"]]],["^1=","goog/structs/heap.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36","^3?","~$goog.structs.Node"]]],["^1=","goog/debug/entrypointregistry.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30"]]],["^1=","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^64","^5M","^3D","^2Z"]]],["^1=","com/cognitect/transit/types.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^5[","~$com.cognitect.transit.eq","^6L"]]],["^1=","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","com/fulcrologic/fulcro/rendering/keyframe_render.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$module$node_modules$react_dom$index","^Y","^5W","^W","^S"]]],["^1=","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.labs.userAgent","^2Z"]]],["^1=","expound/printer.cljc"],["f84ecd45aeef38fd6f1c53d8323e6abc5dc5a0e4","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3;","^@","^D","^P","^4L","^4M","^3H","^4I","^55","^3<"]]],["^1=","com/cognitect/transit/eq.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^5["]]],["^1=","goog/debug/debug.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36","~$goog.debug.errorcontext"]]],["^1=","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/math/coordinate.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.math"]]],["^1=","goog/debug/errorcontext.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^46","^3<","^49"]]],["^1=","goog/iter/iter.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36","^30","~$goog.debug","^5J","^6R"]]],["^1=","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/async/nexttick.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3W","~$goog.dom","^5T","^5J","^3I","^3J"]]],["^1=","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","^5K","^5C","^5L","^5S","^5H","^3A","^3D","^2Z","^3B"]]],["^1=","com/cognitect/transit/caching.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^60"]]],["^1=","goog/events/event.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^4U","^3P"]]],["^1=","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^44","^45","^46"]]],["^1=","goog/events/eventhandler.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^4U","^4V","^3?","^3O","^3P","^38","^41"]]],["^1=","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","cljs/core.cljs"],["e2ad9a4500a5ecabaf01429c4f0d6f7fac146951","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^6L","~$goog.math.Integer","^3<","^3?","^36","^3:","^49"]]],["^1=","com/cognitect/transit.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^5[","~$com.cognitect.transit.impl.reader","~$com.cognitect.transit.impl.writer","^61","^6N","^3T","^3U"]]],["^1=","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3D","^3E","^5D","^30"]]],["^1=","goog/log/log.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","^6S"]]],["^1=","goog/async/throwexception.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3D","^5L","^3E","^3?","^30","^2Z"]]],["^1=","goog/structs/collection.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/events/browserevent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^6S","^3O","~$goog.events.EventType","^3L","^3>"]]],["^1=","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3L"]]],["^1=","goog/structs/node.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/dom/browserfeature.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3>"]]],["^2P","node_modules/scheduler/tracing.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","4a7a89de5eaa5548bfc85da9e5243b3c7e444a34","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^2U","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^2P","node_modules/react-dom/cjs/react-dom.development.js"],["1c6e82d3f9756822c3b08dd8f8e1d7c23a7f1630","3679a1a898d0c80b330819274df3fe1302fa19d1","9e0e7f2f8475431f2b4b8c517c6fabc2273c7857","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^2U","^5:","^5;","^5<","~$module$node_modules$scheduler$tracing"]]],["^1=","clojure/set.cljs"],["e2ad9a4500a5ecabaf01429c4f0d6f7fac146951","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z"]]],["^1=","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","^3<"]]],["^1=","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","^3E"]]],["^1=","goog/disposable/disposeall.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^4["]]],["^1=","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^U","^Y","^W","^P","^Q","^S"]]],["^1=","goog/json/json.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/i18n/localefeature.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/events/listenable.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3P","^40","^42"]]],["^1=","goog/events/listenablekey.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3Y"]]],["^1=","com/cognitect/transit/impl/writer.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^5[","^3U","~$com.cognitect.transit.handlers","^61","^60","^6L"]]],["^1=","goog/net/xmlhttpfactory.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^4D"]]],["^1=","com/fulcrologic/fulcro/algorithms/denormalize.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^P","^Q","^S"]]],["^1=","goog/net/xmlhttp.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","~$goog.net.WrapperXmlHttpFactory","^4E","^4D"]]],["^1=","goog/net/xhrlike.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","cognitect/transit.cljs"],["ae688999ee978d238bffd4df0c0323e552d6d8dc","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$com.cognitect.transit","^61","^6N","^6L"]]],["^1=","goog/crypt/base64.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","^3F","^2Z","^3>","~$goog.userAgent.product"]]]]],"~:clj-info",["^ ","jar:file:/Users/guilhermecintra/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/utils.cljc",1642814467000,"jar:file:/Users/guilhermecintra/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/columns.clj",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/instant.clj",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer/env.clj",1632355889000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/core.async/1.4.627/core.async-1.4.627.jar!/cljs/core/async.clj",1642814473000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1632257295000,"jar:file:/Users/guilhermecintra/.m2/repository/expound/expound/0.8.9/expound-0.8.9.jar!/expound/paths.cljc",1642814468000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.0/tools.analyzer.jvm-1.2.0.jar!/clojure/tools/analyzer/jvm/utils.clj",1632355889000,"jar:file:/Users/guilhermecintra/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/impl/pro.cljc",1642814467000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1632257295000,"jar:file:/Users/guilhermecintra/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/config.cljc",1642814467000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/main.clj",1632257295000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/core.async/1.4.627/core.async-1.4.627.jar!/clojure/core/async/impl/channels.clj",1642814473000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/externs.clj",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1632257295000,"jar:file:/Users/guilhermecintra/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/impl/externs.cljc",1642814467000,"jar:file:/Users/guilhermecintra/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/raw/components.cljc",1642814471000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/gen/alpha.clj",1632257294000,"jar:file:/Users/guilhermecintra/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss/impl.clj",1642814471000,"jar:file:/Users/guilhermecintra/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/transit.cljc",1642814471000,"jar:file:/Users/guilhermecintra/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/tempid.cljc",1642814471000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1642814472000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/spec/gen/alpha.cljc",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1632257295000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/core.async/1.4.627/core.async-1.4.627.jar!/cljs/core/async/impl/ioc_macros.clj",1642814473000,"jar:file:/Users/guilhermecintra/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/denormalize.cljc",1642814471000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/analyzer/passes/and_or.cljc",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/core.cljc",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/core.async/1.4.627/core.async-1.4.627.jar!/clojure/core/async/impl/protocols.clj",1642814473000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/core.async/1.4.627/core.async-1.4.627.jar!/clojure/core/async/impl/concurrent.clj",1642814473000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/alpha.clj",1632257294000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer/utils.clj",1632355889000,"jar:file:/Users/guilhermecintra/.m2/repository/binaryage/devtools/1.0.4/devtools-1.0.4.jar!/devtools/defaults.clj",1642814471000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/tagged_literals.cljc",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/core.cljc",1642814467000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/env.cljc",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/expound/expound/0.8.9/expound-0.8.9.jar!/expound/alpha.cljc",1642814468000,"jar:file:/Users/guilhermecintra/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/lookup.cljc",1642814471000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/analyzer/passes.cljc",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/analyzer.cljc",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1642814472000,"jar:file:/Users/guilhermecintra/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/do_not_use.cljc",1642814471000,"jar:file:/Users/guilhermecintra/.m2/repository/com/taoensso/encore/3.10.1/encore-3.10.1.jar!/taoensso/encore.cljc",1642814468000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/spec/alpha.cljc",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1632257295000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1632257295000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1642814472000,"jar:file:/Users/guilhermecintra/.m2/repository/expound/expound/0.8.9/expound-0.8.9.jar!/expound/ansi.cljc",1642814468000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/source_map/base64_vlq.clj",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/core.async/1.4.627/core.async-1.4.627.jar!/clojure/core/async/impl/buffers.clj",1642814473000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer.clj",1632355889000,"jar:file:/Users/guilhermecintra/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/exception.clj",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/ansi.clj",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/impl/parser.clj",1642814467000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1642814472000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/source_map.clj",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/pprint.cljc",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/source_map/base64.clj",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1642814472000,"jar:file:/Users/guilhermecintra/.m2/repository/expound/expound/0.8.9/expound-0.8.9.jar!/expound/problems.cljc",1642814468000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/util.cljc",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1642814472000,"jar:file:/Users/guilhermecintra/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/registry.cljc",1642814467000,"jar:file:/Users/guilhermecintra/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/components.cljc",1642814471000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1632257295000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/core.async/1.4.627/core.async-1.4.627.jar!/clojure/core/async/impl/mutex.clj",1642814473000,"jar:file:/Users/guilhermecintra/.m2/repository/com/cognitect/transit-clj/1.0.324/transit-clj-1.0.324.jar!/cognitect/transit.clj",1642814471000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/compiler.cljc",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1632257295000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/edn.clj",1642814472000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/js_deps.cljc",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/com/taoensso/timbre/5.1.1/timbre-5.1.1.jar!/taoensso/timbre/appenders/core.cljc",1642814472000,"jar:file:/Users/guilhermecintra/.m2/repository/edn-query-language/eql/1.0.1/eql-1.0.1.jar!/edn_query_language/core.cljc",1642814467000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/core.async/1.4.627/core.async-1.4.627.jar!/clojure/core/async.clj",1642814473000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1642786736000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.0/tools.analyzer.jvm-1.2.0.jar!/clojure/tools/analyzer/jvm.clj",1632355889000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/analyzer/impl.cljc",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss.clj",1642814471000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojurescript/1.10.914/clojurescript-1.10.914.jar!/cljs/reader.clj",1642814470000,"jar:file:/Users/guilhermecintra/.m2/repository/expound/expound/0.8.9/expound-0.8.9.jar!/expound/util.cljc",1642814468000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer/ast.clj",1632355889000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/core.async/1.4.627/core.async-1.4.627.jar!/clojure/core/async/impl/ioc_macros.clj",1642814473000,"jar:file:/Users/guilhermecintra/.m2/repository/expound/expound/0.8.9/expound-0.8.9.jar!/expound/printer.cljc",1642814468000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/stacktrace.clj",1632257295000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/core.async/1.4.627/core.async-1.4.627.jar!/clojure/core/async/impl/dispatch.clj",1642814473000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/reflect.clj",1632257295000,"jar:file:/Users/guilhermecintra/.m2/repository/com/taoensso/timbre/5.1.1/timbre-5.1.1.jar!/taoensso/timbre.cljc",1642814472000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/core.async/1.4.627/core.async-1.4.627.jar!/clojure/core/async/impl/exec/threadpool.clj",1642814473000,"jar:file:/Users/guilhermecintra/.m2/repository/org/clojure/core.async/1.4.627/core.async-1.4.627.jar!/clojure/core/async/impl/timers.clj",1642814473000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",1,"^9",5,"^:",1,"^;",60],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D"],"^E",null,"^F",["^G",[]],"^H","^I","^J",["^ "],"^M",null,"^N",["^ ","^O","^P","^Q","^Q","^R","^S","^T","^U","^V","^W","^X","^Q","^Y","^Y","^Z","^Z","^[","^[","^P","^P","^U","^U","^W","^W","^S","^S","^10","^Y"],"^11",["^G",["^12"]],"~:shadow/js-access-global",["^G",["Error"]],"^13",null,"~:defs",["^ ","~$dirty-table-entries",["^ ","~:protocol-inline",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",16,"^9",7,"^:",16,"^;",26,"~:arglists",["^16",["~$quote",["^16",[["~$old-state","~$new-state","~$idents"]]]]],"^6","Checks the given `idents` and returns a subset of them where the data they refer to has changed\n   between `old-state` and `new-state`."],"^H","^1[","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",26,"~:method-params",["^16",[["^9=","^9>","^9?"]]],"~:protocol-impl",null,"~:arglists-meta",["^16",[null,null]],"^9",1,"~:variadic?",false,"^8",16,"~:ret-tag",["^G",[null,"~$any"]],"^:",16,"~:max-fixed-arity",3,"~:fn-var",true,"^9;",["^16",["^9<",["^16",[["^9=","^9>","^9?"]]]]],"^6","Checks the given `idents` and returns a subset of them where the data they refer to has changed\n   between `old-state` and `new-state`."],"~$render-component!",["^ ","^9:",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",28,"^9",7,"^:",28,"^;",24,"^9;",["^16",["^9<",["^16",[["~$app","~$ident","~$c"]]]]],"^6","Uses the component's query and the current application state to query for the current value of that component's\n  props (subtree). It then sends those props to the component via \"props tunnelling\" (setting them on a well-known key in\n  component-local state)."],"^H","^1J","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",24,"^9@",["^16",[["^9I","^9J","~$c"]]],"^9A",null,"^9B",["^16",[null,null]],"^9",1,"^9C",false,"^8",28,"^9D",["^G",["~$js","~$clj-nil"]],"^:",28,"^9F",3,"^9G",true,"^9;",["^16",["^9<",["^16",[["^9I","^9J","~$c"]]]]],"^6","Uses the component's query and the current application state to query for the current value of that component's\n  props (subtree). It then sends those props to the component via \"props tunnelling\" (setting them on a well-known key in\n  component-local state)."],"~$render-components-with-ident!",["^ ","^9:",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",50,"^9",7,"^:",50,"^;",36,"^9;",["^16",["^9<",["^16",[["^9I","^9J"]]]]],"^6","Renders *only* components that *have* the given ident."],"^H","^1L","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",36,"^9@",["^16",[["^9I","^9J"]]],"^9A",null,"^9B",["^16",[null,null]],"^9",1,"^9C",false,"^8",50,"^9D","^9L","^:",50,"^9F",2,"^9G",true,"^9;",["^16",["^9<",["^16",[["^9I","^9J"]]]]],"^6","Renders *only* components that *have* the given ident."],"~$render-dependents-of-ident!",["^ ","^9:",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",56,"^9",7,"^:",56,"^;",34,"^9;",["^16",["^9<",["^16",[["^9I","^9J"]]]]],"^6","Renders components that have, or query for, the given ident."],"^H","^2M","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",34,"^9@",["^16",[["^9I","^9J"]]],"^9A",null,"^9B",["^16",[null,null]],"^9",1,"^9C",false,"^8",56,"^9D","^9L","^:",56,"^9F",2,"^9G",true,"^9;",["^16",["^9<",["^16",[["^9I","^9J"]]]]],"^6","Renders components that have, or query for, the given ident."],"~$props->components",["^ ","^9:",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",72,"^9",7,"^:",72,"^;",24,"^9;",["^16",["^9<",["^16",[["^9I","~$property-set"]]]]],"^6","Given an app and a `property-set`: returns the components that query for the items in property-set.\n\n  The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n  in a component query as a property or join key."],"^H","^1K","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",24,"^9@",["^16",[["^9I","^9P"]]],"^9A",null,"^9B",["^16",[null,null]],"^9",1,"^9C",false,"^8",72,"^9D",["^G",[null,"^9E","^9L"]],"^:",72,"^9F",2,"^9G",true,"^9;",["^16",["^9<",["^16",[["^9I","^9P"]]]]],"^6","Given an app and a `property-set`: returns the components that query for the items in property-set.\n\n  The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n  in a component query as a property or join key."],"~$render-stale-components!",["^ ","^9:",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",90,"^9",7,"^:",90,"^;",31,"^9;",["^16",["^9<",["^16",[["^9I"]]]]],"^6","This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n   uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n   When it finds data that has changed it renders all of the components that depend on that data."],"^H","^21","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",31,"^9@",["^16",[["^9I"]]],"^9A",null,"^9B",["^16",[null,null]],"^9",1,"^9C",false,"^8",90,"^9D","^9L","^:",90,"^9F",1,"^9G",true,"^9;",["^16",["^9<",["^16",[["^9I"]]]]],"^6","This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n   uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n   When it finds data that has changed it renders all of the components that depend on that data."],"~$render!",["^ ","^9:",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",132,"^9",7,"^:",132,"^;",14,"^9;",["^16",["^9<",["^16",[["^9I"],["^9I",["^ ","~:keys",["~$force-root?","~$root-props-changed?"],"^18","~$options"]]]]]],"^6","The top-level call for using this optimized render in your application.\n\n  If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n  it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n  data that has changed.","~:top-fn",["^ ","^9C",false,"~:fixed-arity",2,"^9F",2,"^9@",[["^9I"],["^9I",["^ ","^9S",["^9T","^9U"],"^18","^9V"]]],"^9;",["^16",[["^9I"],["^9I",["^ ","^9S",["^9T","^9U"],"^18","^9V"]]]],"^9B",["^16",[null,null]]]],"^H","^2>","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",14,"^9W",["^ ","^9C",false,"^9X",2,"^9F",2,"^9@",[["^9I"],["^9I",["^ ","^9S",["^9T","^9U"],"^18","^9V"]]],"^9;",["^16",[["^9I"],["^9I",["^ ","^9S",["^9T","^9U"],"^18","^9V"]]]],"^9B",["^16",[null,null]]],"^9@",[["^9I"],["^9I",["^ ","^9S",["^9T","^9U"],"^18","^9V"]]],"^9A",null,"^9X",2,"^9B",["^16",[null,null]],"^9",1,"^9C",false,"~:methods",[["^ ","^9X",1,"^9C",false,"~:tag","^9E"],["^ ","^9X",2,"^9C",false,"^9Z",["^G",[null,"^9E"]]]],"^8",132,"^:",132,"^9F",2,"^9G",true,"^9;",["^16",[["^9I"],["^9I",["^ ","^9S",["^9T","^9U"],"^18","^9V"]]]],"^6","The top-level call for using this optimized render in your application.\n\n  If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n  it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n  data that has changed."]],"^14",["^ ","^Z","^Z","^R","^S","^V","^W","^W","^W","^S","^S"],"~:cljs.analyzer/constants",["^ ","^11",["^G",["~:com.fulcrologic.fulcro.application/indexes","~:com.fulcrologic.fulcro.application/last-rendered-state","~:idents-in-joins","~:prop->classes","~:force-root?","~:com.fulcrologic.fulcro.application/state-atom","~:com.fulcrologic.fulcro.application/only-refresh","~:class->components","~:com.fulcrologic.fulcro.application/to-refresh","~:root-props-changed?","~:com.fulcrologic.fulcro.application/runtime-atom","~:info","~:error","~:ident->components","~:linked-props","~:auto","~:p","~:com.fulcrologic.fulcro.application/app-root"]],"~:order",["^:5","^:<","~:p","^:?","^:@","^::","^:;","^:0","^:3","^:2","^:7","^:1","^:8","^:6","^:>","^:=","^:4","^:9"]],"^19",["^ ","^12",["^G",[]]],"^1:",["^ "],"^1;",["^[","^Z","^U","^Y","^W","^P","^Q","^S"]],"^L","^I","~:ns-specs",["^ "],"~:ns-spec-vars",["^G",[]],"~:compiler-options",["^2O",[["^:D","~:static-fns"],true,["^:D","~:shadow-tweaks"],null,["^:D","~:source-map-inline"],null,["^:D","~:elide-asserts"],false,["^:D","~:optimize-constants"],null,["^:D","^1@"],null,["^:D","~:external-config"],null,["^:D","~:tooling-config"],null,["^:D","~:emit-constants"],null,["^:D","~:load-tests"],null,["^:D","~:form-size-threshold"],null,["^:D","~:global-goog-object&array"],null,["^:D","~:data-readers"],null,["^:D","~:infer-externs"],"^:?",["^:D","^1B"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^:D","~:fn-invoke-direct"],null,["^:D","~:source-map"],"/dev/null"]]]